// Code generated by protoc-gen-go. DO NOT EDIT.
// source: calc.proto

package calcpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AddRequest struct {
	// Left operand
	A int32 `protobuf:"zigzag32,1,opt,name=a,proto3" json:"a,omitempty"`
	// Right operand
	B                    int32    `protobuf:"zigzag32,2,opt,name=b,proto3" json:"b,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddRequest) Reset()         { *m = AddRequest{} }
func (m *AddRequest) String() string { return proto.CompactTextString(m) }
func (*AddRequest) ProtoMessage()    {}
func (*AddRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a2b9900dc883ea68, []int{0}
}

func (m *AddRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddRequest.Unmarshal(m, b)
}
func (m *AddRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddRequest.Marshal(b, m, deterministic)
}
func (m *AddRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddRequest.Merge(m, src)
}
func (m *AddRequest) XXX_Size() int {
	return xxx_messageInfo_AddRequest.Size(m)
}
func (m *AddRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddRequest proto.InternalMessageInfo

func (m *AddRequest) GetA() int32 {
	if m != nil {
		return m.A
	}
	return 0
}

func (m *AddRequest) GetB() int32 {
	if m != nil {
		return m.B
	}
	return 0
}

type AddResponse struct {
	Field                int32    `protobuf:"zigzag32,1,opt,name=field,proto3" json:"field,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddResponse) Reset()         { *m = AddResponse{} }
func (m *AddResponse) String() string { return proto.CompactTextString(m) }
func (*AddResponse) ProtoMessage()    {}
func (*AddResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a2b9900dc883ea68, []int{1}
}

func (m *AddResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddResponse.Unmarshal(m, b)
}
func (m *AddResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddResponse.Marshal(b, m, deterministic)
}
func (m *AddResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddResponse.Merge(m, src)
}
func (m *AddResponse) XXX_Size() int {
	return xxx_messageInfo_AddResponse.Size(m)
}
func (m *AddResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddResponse proto.InternalMessageInfo

func (m *AddResponse) GetField() int32 {
	if m != nil {
		return m.Field
	}
	return 0
}

type RestaRequest struct {
	// Left operand
	A int32 `protobuf:"zigzag32,1,opt,name=a,proto3" json:"a,omitempty"`
	// Right operand
	B                    int32    `protobuf:"zigzag32,2,opt,name=b,proto3" json:"b,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RestaRequest) Reset()         { *m = RestaRequest{} }
func (m *RestaRequest) String() string { return proto.CompactTextString(m) }
func (*RestaRequest) ProtoMessage()    {}
func (*RestaRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a2b9900dc883ea68, []int{2}
}

func (m *RestaRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RestaRequest.Unmarshal(m, b)
}
func (m *RestaRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RestaRequest.Marshal(b, m, deterministic)
}
func (m *RestaRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RestaRequest.Merge(m, src)
}
func (m *RestaRequest) XXX_Size() int {
	return xxx_messageInfo_RestaRequest.Size(m)
}
func (m *RestaRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RestaRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RestaRequest proto.InternalMessageInfo

func (m *RestaRequest) GetA() int32 {
	if m != nil {
		return m.A
	}
	return 0
}

func (m *RestaRequest) GetB() int32 {
	if m != nil {
		return m.B
	}
	return 0
}

type RestaResponse struct {
	Field                int32    `protobuf:"zigzag32,1,opt,name=field,proto3" json:"field,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RestaResponse) Reset()         { *m = RestaResponse{} }
func (m *RestaResponse) String() string { return proto.CompactTextString(m) }
func (*RestaResponse) ProtoMessage()    {}
func (*RestaResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a2b9900dc883ea68, []int{3}
}

func (m *RestaResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RestaResponse.Unmarshal(m, b)
}
func (m *RestaResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RestaResponse.Marshal(b, m, deterministic)
}
func (m *RestaResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RestaResponse.Merge(m, src)
}
func (m *RestaResponse) XXX_Size() int {
	return xxx_messageInfo_RestaResponse.Size(m)
}
func (m *RestaResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RestaResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RestaResponse proto.InternalMessageInfo

func (m *RestaResponse) GetField() int32 {
	if m != nil {
		return m.Field
	}
	return 0
}

type MultiplicacionRequest struct {
	// Left operand
	A int32 `protobuf:"zigzag32,1,opt,name=a,proto3" json:"a,omitempty"`
	// Right operand
	B                    int32    `protobuf:"zigzag32,2,opt,name=b,proto3" json:"b,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MultiplicacionRequest) Reset()         { *m = MultiplicacionRequest{} }
func (m *MultiplicacionRequest) String() string { return proto.CompactTextString(m) }
func (*MultiplicacionRequest) ProtoMessage()    {}
func (*MultiplicacionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a2b9900dc883ea68, []int{4}
}

func (m *MultiplicacionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MultiplicacionRequest.Unmarshal(m, b)
}
func (m *MultiplicacionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MultiplicacionRequest.Marshal(b, m, deterministic)
}
func (m *MultiplicacionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MultiplicacionRequest.Merge(m, src)
}
func (m *MultiplicacionRequest) XXX_Size() int {
	return xxx_messageInfo_MultiplicacionRequest.Size(m)
}
func (m *MultiplicacionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MultiplicacionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MultiplicacionRequest proto.InternalMessageInfo

func (m *MultiplicacionRequest) GetA() int32 {
	if m != nil {
		return m.A
	}
	return 0
}

func (m *MultiplicacionRequest) GetB() int32 {
	if m != nil {
		return m.B
	}
	return 0
}

type MultiplicacionResponse struct {
	Field                int32    `protobuf:"zigzag32,1,opt,name=field,proto3" json:"field,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MultiplicacionResponse) Reset()         { *m = MultiplicacionResponse{} }
func (m *MultiplicacionResponse) String() string { return proto.CompactTextString(m) }
func (*MultiplicacionResponse) ProtoMessage()    {}
func (*MultiplicacionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a2b9900dc883ea68, []int{5}
}

func (m *MultiplicacionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MultiplicacionResponse.Unmarshal(m, b)
}
func (m *MultiplicacionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MultiplicacionResponse.Marshal(b, m, deterministic)
}
func (m *MultiplicacionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MultiplicacionResponse.Merge(m, src)
}
func (m *MultiplicacionResponse) XXX_Size() int {
	return xxx_messageInfo_MultiplicacionResponse.Size(m)
}
func (m *MultiplicacionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MultiplicacionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MultiplicacionResponse proto.InternalMessageInfo

func (m *MultiplicacionResponse) GetField() int32 {
	if m != nil {
		return m.Field
	}
	return 0
}

type DivisionRequest struct {
	// Left operand
	A int32 `protobuf:"zigzag32,1,opt,name=a,proto3" json:"a,omitempty"`
	// Right operand
	B                    int32    `protobuf:"zigzag32,2,opt,name=b,proto3" json:"b,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DivisionRequest) Reset()         { *m = DivisionRequest{} }
func (m *DivisionRequest) String() string { return proto.CompactTextString(m) }
func (*DivisionRequest) ProtoMessage()    {}
func (*DivisionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a2b9900dc883ea68, []int{6}
}

func (m *DivisionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DivisionRequest.Unmarshal(m, b)
}
func (m *DivisionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DivisionRequest.Marshal(b, m, deterministic)
}
func (m *DivisionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DivisionRequest.Merge(m, src)
}
func (m *DivisionRequest) XXX_Size() int {
	return xxx_messageInfo_DivisionRequest.Size(m)
}
func (m *DivisionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DivisionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DivisionRequest proto.InternalMessageInfo

func (m *DivisionRequest) GetA() int32 {
	if m != nil {
		return m.A
	}
	return 0
}

func (m *DivisionRequest) GetB() int32 {
	if m != nil {
		return m.B
	}
	return 0
}

type DivisionResponse struct {
	Field                int32    `protobuf:"zigzag32,1,opt,name=field,proto3" json:"field,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DivisionResponse) Reset()         { *m = DivisionResponse{} }
func (m *DivisionResponse) String() string { return proto.CompactTextString(m) }
func (*DivisionResponse) ProtoMessage()    {}
func (*DivisionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a2b9900dc883ea68, []int{7}
}

func (m *DivisionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DivisionResponse.Unmarshal(m, b)
}
func (m *DivisionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DivisionResponse.Marshal(b, m, deterministic)
}
func (m *DivisionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DivisionResponse.Merge(m, src)
}
func (m *DivisionResponse) XXX_Size() int {
	return xxx_messageInfo_DivisionResponse.Size(m)
}
func (m *DivisionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DivisionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DivisionResponse proto.InternalMessageInfo

func (m *DivisionResponse) GetField() int32 {
	if m != nil {
		return m.Field
	}
	return 0
}

func init() {
	proto.RegisterType((*AddRequest)(nil), "calc.AddRequest")
	proto.RegisterType((*AddResponse)(nil), "calc.AddResponse")
	proto.RegisterType((*RestaRequest)(nil), "calc.RestaRequest")
	proto.RegisterType((*RestaResponse)(nil), "calc.RestaResponse")
	proto.RegisterType((*MultiplicacionRequest)(nil), "calc.MultiplicacionRequest")
	proto.RegisterType((*MultiplicacionResponse)(nil), "calc.MultiplicacionResponse")
	proto.RegisterType((*DivisionRequest)(nil), "calc.DivisionRequest")
	proto.RegisterType((*DivisionResponse)(nil), "calc.DivisionResponse")
}

func init() { proto.RegisterFile("calc.proto", fileDescriptor_a2b9900dc883ea68) }

var fileDescriptor_a2b9900dc883ea68 = []byte{
	// 261 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4a, 0x4e, 0xcc, 0x49,
	0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x01, 0xb1, 0x95, 0x34, 0xb8, 0xb8, 0x1c, 0x53,
	0x52, 0x82, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84, 0x78, 0xb8, 0x18, 0x13, 0x25, 0x18, 0x15,
	0x18, 0x35, 0x04, 0x83, 0x18, 0x13, 0x41, 0xbc, 0x24, 0x09, 0x26, 0x08, 0x2f, 0x49, 0x49, 0x99,
	0x8b, 0x1b, 0xac, 0xb2, 0xb8, 0x20, 0x3f, 0xaf, 0x38, 0x55, 0x48, 0x84, 0x8b, 0x35, 0x2d, 0x33,
	0x35, 0x27, 0x05, 0xaa, 0x1c, 0xc2, 0x51, 0xd2, 0xe2, 0xe2, 0x09, 0x4a, 0x2d, 0x2e, 0x49, 0x24,
	0xc6, 0x40, 0x55, 0x2e, 0x5e, 0xa8, 0x5a, 0xbc, 0x46, 0x1a, 0x73, 0x89, 0xfa, 0x96, 0xe6, 0x94,
	0x64, 0x16, 0xe4, 0x64, 0x26, 0x27, 0x26, 0x67, 0xe6, 0xe7, 0x11, 0x63, 0xb6, 0x1e, 0x97, 0x18,
	0xba, 0x26, 0xbc, 0x96, 0xe8, 0x72, 0xf1, 0xbb, 0x64, 0x96, 0x65, 0x16, 0x13, 0x69, 0xbc, 0x06,
	0x97, 0x00, 0x42, 0x39, 0x3e, 0x83, 0x8d, 0xde, 0x30, 0x72, 0xb1, 0x38, 0x27, 0xe6, 0x24, 0x0b,
	0x69, 0x71, 0x31, 0x3b, 0xa6, 0xa4, 0x08, 0x09, 0xe8, 0x81, 0xa3, 0x00, 0x11, 0xe6, 0x52, 0x82,
	0x48, 0x22, 0x50, 0xa3, 0x0c, 0xb8, 0x58, 0xc1, 0x21, 0x23, 0x24, 0x04, 0x91, 0x43, 0x0e, 0x52,
	0x29, 0x61, 0x14, 0x31, 0xa8, 0x0e, 0x6f, 0x2e, 0x3e, 0x54, 0xff, 0x0a, 0x49, 0x43, 0x94, 0x61,
	0x0d, 0x3a, 0x29, 0x19, 0xec, 0x92, 0x50, 0xc3, 0x2c, 0xb9, 0x38, 0x60, 0xbe, 0x13, 0x12, 0x85,
	0xa8, 0x44, 0x0b, 0x1c, 0x29, 0x31, 0x74, 0x61, 0x88, 0x56, 0x27, 0x8e, 0x28, 0x36, 0x90, 0x44,
	0x41, 0x52, 0x12, 0x1b, 0x38, 0x95, 0x19, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x38, 0x85, 0xbd,
	0xa3, 0x73, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CalcClient is the client API for Calc service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CalcClient interface {
	// Add implements add.
	Add(ctx context.Context, in *AddRequest, opts ...grpc.CallOption) (*AddResponse, error)
	// Resta implements resta.
	Resta(ctx context.Context, in *RestaRequest, opts ...grpc.CallOption) (*RestaResponse, error)
	// Multiplicacion implements multiplicacion.
	Multiplicacion(ctx context.Context, in *MultiplicacionRequest, opts ...grpc.CallOption) (*MultiplicacionResponse, error)
	// Division implements division.
	Division(ctx context.Context, in *DivisionRequest, opts ...grpc.CallOption) (*DivisionResponse, error)
}

type calcClient struct {
	cc grpc.ClientConnInterface
}

func NewCalcClient(cc grpc.ClientConnInterface) CalcClient {
	return &calcClient{cc}
}

func (c *calcClient) Add(ctx context.Context, in *AddRequest, opts ...grpc.CallOption) (*AddResponse, error) {
	out := new(AddResponse)
	err := c.cc.Invoke(ctx, "/calc.Calc/Add", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calcClient) Resta(ctx context.Context, in *RestaRequest, opts ...grpc.CallOption) (*RestaResponse, error) {
	out := new(RestaResponse)
	err := c.cc.Invoke(ctx, "/calc.Calc/Resta", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calcClient) Multiplicacion(ctx context.Context, in *MultiplicacionRequest, opts ...grpc.CallOption) (*MultiplicacionResponse, error) {
	out := new(MultiplicacionResponse)
	err := c.cc.Invoke(ctx, "/calc.Calc/Multiplicacion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calcClient) Division(ctx context.Context, in *DivisionRequest, opts ...grpc.CallOption) (*DivisionResponse, error) {
	out := new(DivisionResponse)
	err := c.cc.Invoke(ctx, "/calc.Calc/Division", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CalcServer is the server API for Calc service.
type CalcServer interface {
	// Add implements add.
	Add(context.Context, *AddRequest) (*AddResponse, error)
	// Resta implements resta.
	Resta(context.Context, *RestaRequest) (*RestaResponse, error)
	// Multiplicacion implements multiplicacion.
	Multiplicacion(context.Context, *MultiplicacionRequest) (*MultiplicacionResponse, error)
	// Division implements division.
	Division(context.Context, *DivisionRequest) (*DivisionResponse, error)
}

// UnimplementedCalcServer can be embedded to have forward compatible implementations.
type UnimplementedCalcServer struct {
}

func (*UnimplementedCalcServer) Add(ctx context.Context, req *AddRequest) (*AddResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Add not implemented")
}
func (*UnimplementedCalcServer) Resta(ctx context.Context, req *RestaRequest) (*RestaResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Resta not implemented")
}
func (*UnimplementedCalcServer) Multiplicacion(ctx context.Context, req *MultiplicacionRequest) (*MultiplicacionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Multiplicacion not implemented")
}
func (*UnimplementedCalcServer) Division(ctx context.Context, req *DivisionRequest) (*DivisionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Division not implemented")
}

func RegisterCalcServer(s *grpc.Server, srv CalcServer) {
	s.RegisterService(&_Calc_serviceDesc, srv)
}

func _Calc_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalcServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calc.Calc/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalcServer).Add(ctx, req.(*AddRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Calc_Resta_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RestaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalcServer).Resta(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calc.Calc/Resta",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalcServer).Resta(ctx, req.(*RestaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Calc_Multiplicacion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MultiplicacionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalcServer).Multiplicacion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calc.Calc/Multiplicacion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalcServer).Multiplicacion(ctx, req.(*MultiplicacionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Calc_Division_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DivisionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalcServer).Division(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calc.Calc/Division",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalcServer).Division(ctx, req.(*DivisionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Calc_serviceDesc = grpc.ServiceDesc{
	ServiceName: "calc.Calc",
	HandlerType: (*CalcServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Add",
			Handler:    _Calc_Add_Handler,
		},
		{
			MethodName: "Resta",
			Handler:    _Calc_Resta_Handler,
		},
		{
			MethodName: "Multiplicacion",
			Handler:    _Calc_Multiplicacion_Handler,
		},
		{
			MethodName: "Division",
			Handler:    _Calc_Division_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "calc.proto",
}
