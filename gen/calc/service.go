// Code generated by goa v3.0.10, DO NOT EDIT.
//
// calc service
//
// Command:
// $ goa gen calc/design

package calc

import (
	"context"
)

// The calc service performs operations on numbers.
type Service interface {
	// Add implements add.
	Add(context.Context, *AddPayload) (res int, err error)
	// Resta implements resta.
	Resta(context.Context, *RestaPayload) (res int, err error)
	// Multiplicacion implements multiplicacion.
	Multiplicacion(context.Context, *MultiplicacionPayload) (res int, err error)
	// Division implements division.
	Division(context.Context, *DivisionPayload) (res int, err error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "calc"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [4]string{"add", "resta", "multiplicacion", "division"}

// AddPayload is the payload type of the calc service add method.
type AddPayload struct {
	// Left operand
	A int
	// Right operand
	B int
}

// RestaPayload is the payload type of the calc service resta method.
type RestaPayload struct {
	// Left operand
	A int
	// Right operand
	B int
}

// MultiplicacionPayload is the payload type of the calc service multiplicacion
// method.
type MultiplicacionPayload struct {
	// Left operand
	A int
	// Right operand
	B int
}

// DivisionPayload is the payload type of the calc service division method.
type DivisionPayload struct {
	// Left operand
	A int
	// Right operand
	B int
}
